{
  "/public/events": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::Events#get",
      "operationId": "getEventsPublic",
      "tags": ["events"],
      "parameters": [
        {
          "name": "name",
          "in": "query",
          "description": "Title of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "event_type",
          "in": "query",
          "description": "Type of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "event_types",
          "in": "query",
          "description": "Array of multiple event types",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "branch",
          "in": "query",
          "description": "Branch responsible for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "branches",
          "in": "query",
          "description": "Array of multiple branches",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "target_group",
          "in": "query",
          "description": "Adressed target group of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "target_groups",
          "in": "query",
          "description": "Array of multiple target groups",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "max_age",
          "in": "query",
          "description": "Maximum required age for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "open_registration",
          "in": "query",
          "description": "Whether the event is open for registration of non-patrons",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "fee",
          "in": "query",
          "description": "Fee for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "location",
          "in": "query",
          "description": "Location of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "locations",
          "in": "query",
          "description": "Array of multiple locations",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "start_time",
          "in": "query",
          "description": "Starting time of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "end_time",
          "in": "query",
          "description": "Ending time of the event",
          "required": false,
          "type": "string"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Array of events",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": ["string", "null"]
                },
                "event_type": {
                  "type": ["string", "null"]
                },
                "branch": {
                  "type": ["string", "null"]
                },
                "target_group": {
                  "type": ["string", "null"]
                },
                "max_age": {
                  "type": ["integer", "null"]
                },
                "min_age": {
                  "type": ["integer", "null"]
                },
                "open_registration": {
                  "type": ["boolean", "null"]
                },
                "max_participants": {
                  "type": ["integer", "null"]
                },
                "fee": {
                  "type": ["integer", "null"]
                },
                "location": {
                  "type": ["string", "null"]
                },
                "description": {
                  "type": ["string", "null"]
                },
                "image": {
                  "type": ["string", "null"]
                },
                "start_time": {
                  "type": ["string", "null"]
                },
                "end_time": {
                  "type": ["string", "null"]
                },
                "link_to_registration": {
                  "type": ["string", "null"]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/events": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Events#list",
      "operationId": "getEvents",
      "tags": ["events"],
      "description": "Get all events",
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Array of events",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": ["string", "null"]
                },
                "event_type": {
                  "type": ["string", "null"]
                },
                "target_group": {
                  "type": ["string", "null"]
                },
                "min_age": {
                  "type": ["integer", "null"]
                },
                "max_age": {
                  "type": ["integer", "null"]
                },
                "max_participants": {
                  "type": ["integer", "null"]
                },
                "start_time": {
                  "type": ["string", "null"]
                },
                "end_time": {
                  "type": ["string", "null"]
                },
                "registration_start": {
                  "type": ["string", "null"]
                },
                "registration_end": {
                  "type": ["string", "null"]
                },
                "fee": {
                  "type": ["number", "null"]
                },
                "location": {
                  "type": ["string", "null"]
                },
                "image": {
                  "type": ["string", "null"]
                },
                "description": {
                  "type": ["string", "null"]
                },
                "registration_link": {
                  "type": ["string", "null"]
                },
                "open_registration": {
                  "type": ["boolean", "null"]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Events#add",
      "operationId": "addEvent",
      "tags": ["events"],
      "description": "Add an event",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Event object that needs to be added",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": ["string", "null"]
              },
              "event_type": {
                "type": ["string", "null"]
              },
              "target_group": {
                "type": ["string", "null"]
              },
              "min_age": {
                "type": ["integer", "null"]
              },
              "max_age": {
                "type": ["integer", "null"]
              },
              "max_participants": {
                "type": ["integer", "null"]
              },
              "start_time": {
                "type": ["string", "null"]
              },
              "end_time": {
                "type": ["string", "null"]
              },
              "registration_start": {
                "type": ["string", "null"]
              },
              "registration_end": {
                "type": ["string", "null"]
              },
              "fee": {
                "type": ["number", "null"]
              },
              "location": {
                "type": ["string", "null"]
              },
              "image": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              },
              "registration_link": {
                "type": ["string", "null"]
              },
              "open_registration": {
                "type": ["boolean", "null"]
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": ["string", "null"]
              },
              "event_type": {
                "type": ["string", "null"]
              },
              "branch": {
                "type": ["string", "null"]
              },
              "target_group": {
                "type": ["string", "null"]
              },
              "max_age": {
                "type": ["integer", "null"]
              },
              "min_age": {
                "type": ["integer", "null"]
              },
              "open_registration": {
                "type": ["boolean", "null"]
              },
              "max_participants": {
                "type": ["integer", "null"]
              },
              "fee": {
                "type": ["integer", "null"]
              },
              "location": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              },
              "image": {
                "type": ["string", "null"]
              },
              "start_time": {
                "type": ["string", "null"]
              },
              "end_time": {
                "type": ["string", "null"]
              },
              "link_to_registration": {
                "type": ["string", "null"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/events/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Event#get",
      "operationId": "getEvent",
      "tags": ["events"],
      "description": "Get a single event",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of event to fetch",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": ["string", "null"]
              },
              "event_type": {
                "type": ["string", "null"]
              },
              "target_group": {
                "type": ["string", "null"]
              },
              "min_age": {
                "type": ["integer", "null"]
              },
              "max_age": {
                "type": ["integer", "null"]
              },
              "max_participants": {
                "type": ["integer", "null"]
              },
              "start_time": {
                "type": ["string", "null"]
              },
              "end_time": {
                "type": ["string", "null"]
              },
              "registration_start": {
                "type": ["string", "null"]
              },
              "registration_end": {
                "type": ["string", "null"]
              },
              "fee": {
                "type": ["number", "null"]
              },
              "location": {
                "type": ["string", "null"]
              },
              "image": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              },
              "registration_link": {
                "type": ["string", "null"]
              },
              "open_registration": {
                "type": ["boolean", "null"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Event#update",
      "operationId": "updateEvent",
      "tags": ["events"],
      "description": "Update an event",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of event to update",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Event object that needs to be added",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": ["string", "null"]
              },
              "event_type": {
                "type": ["string", "null"]
              },
              "target_group": {
                "type": ["string", "null"]
              },
              "min_age": {
                "type": ["integer", "null"]
              },
              "max_age": {
                "type": ["integer", "null"]
              },
              "max_participants": {
                "type": ["integer", "null"]
              },
              "start_time": {
                "type": ["string", "null"]
              },
              "end_time": {
                "type": ["string", "null"]
              },
              "registration_start": {
                "type": ["string", "null"]
              },
              "registration_end": {
                "type": ["string", "null"]
              },
              "fee": {
                "type": ["number", "null"]
              },
              "location": {
                "type": ["string", "null"]
              },
              "image": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              },
              "registration_link": {
                "type": ["string", "null"]
              },
              "open_registration": {
                "type": ["boolean", "null"]
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": ["string", "null"]
              },
              "event_type": {
                "type": ["string", "null"]
              },
              "target_group": {
                "type": ["string", "null"]
              },
              "min_age": {
                "type": ["integer", "null"]
              },
              "max_age": {
                "type": ["integer", "null"]
              },
              "max_participants": {
                "type": ["integer", "null"]
              },
              "start_time": {
                "type": ["string", "null"]
              },
              "end_time": {
                "type": ["string", "null"]
              },
              "registration_start": {
                "type": ["string", "null"]
              },
              "registration_end": {
                "type": ["string", "null"]
              },
              "fee": {
                "type": ["number", "null"]
              },
              "location": {
                "type": ["string", "null"]
              },
              "image": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              },
              "registration_link": {
                "type": ["string", "null"]
              },
              "open_registration": {
                "type": ["boolean", "null"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Event#delete",
      "operationId": "deleteEvent",
      "tags": ["events"],
      "description": "Delete an event",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of event to delete",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": ["string", "null"]
              },
              "event_type": {
                "type": ["string", "null"]
              },
              "target_group": {
                "type": ["string", "null"]
              },
              "min_age": {
                "type": ["integer", "null"]
              },
              "max_age": {
                "type": ["integer", "null"]
              },
              "max_participants": {
                "type": ["integer", "null"]
              },
              "start_time": {
                "type": ["string", "null"]
              },
              "end_time": {
                "type": ["string", "null"]
              },
              "registration_start": {
                "type": ["string", "null"]
              },
              "registration_end": {
                "type": ["string", "null"]
              },
              "fee": {
                "type": ["number", "null"]
              },
              "location": {
                "type": ["string", "null"]
              },
              "image": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              },
              "registration_link": {
                "type": ["string", "null"]
              },
              "open_registration": {
                "type": ["boolean", "null"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/event_types": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventTypes#list",
      "operationId": "listEventTypes",
      "tags": ["event_types"],
      "description": "List all event types",
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event types",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "target_group": {
                  "type": "integer"
                },
                "max_age": {
                  "type": "integer"
                },
                "min_age": {
                  "type": "integer"
                },
                "open_registration": {
                  "type": "boolean"
                },
                "max_participants": {
                  "type": "integer"
                },
                "fee": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventTypes#add",
      "operationId": "addEventType",
      "tags": ["event_types"],
      "description": "Add an event type",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Event type data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "target_group": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "fee": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_group": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "fee": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/event_types/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventType#get",
      "operationId": "getEventType",
      "tags": ["event_types"],
      "description": "Get an event type",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Event type id",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_group": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "fee": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventType#update",
      "operationId": "updateEventType",
      "tags": ["event_types"],
      "description": "Update an event type",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Event type id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Event type data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "target_group": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "fee": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_group": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "fee": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventType#delete",
      "operationId": "deleteEventType",
      "tags": ["event_types"],
      "description": "Delete an event type",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Event type id",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/locations": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Locations#list",
      "operationId": "listLocations",
      "tags": ["locations"],
      "description": "List all locations",
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Locations",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "street": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "zip": {
                  "type": "number"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Locations#add",
      "operationId": "addLocation",
      "tags": ["locations"],
      "description": "Add a location",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Location data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "number"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "number"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/locations/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Location#get",
      "operationId": "getLocation",
      "tags": ["locations"],
      "description": "Get a location",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Location id",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "number"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Location#update",
      "operationId": "updateLocation",
      "tags": ["locations"],
      "description": "Update a location",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Location id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Location data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "number"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_group": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "fee": {
                "type": "number"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Location#delete",
      "operationId": "deleteLocation",
      "tags": ["locations"],
      "description": "Delete a location",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Location id",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "number"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/target_groups": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroups#list",
      "operationId": "listTargetGroups",
      "tags": ["target_groups"],
      "description": "List target groups",
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "List of target groups",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "min_age": {
                  "type": "integer"
                },
                "max_age": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroups#add",
      "operationId": "addTargetGroup",
      "tags": ["target_groups"],
      "description": "Add a target group",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Target group data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/target_group/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroup#get",
      "operationId": "getTargetGroup",
      "tags": ["target_groups"],
      "description": "Get a target group",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Target group id",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroup#update",
      "operationId": "updateTargetGroup",
      "tags": ["target_groups"],
      "description": "Update a target group",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Target group id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Target group data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroup#delete",
      "operationId": "deleteTargetGroup",
      "tags": ["target_groups"],
      "description": "Delete a target group",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Target group id",
          "required": true,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": ["string", "null"]
              },
              "description": {
                "type": ["string", "null"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}

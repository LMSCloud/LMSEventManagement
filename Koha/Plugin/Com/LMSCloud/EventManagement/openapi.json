{
  "/public/events": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::Events#get",
      "operationId": "getEventsPublic",
      "tags": [
        "events"
      ],
      "parameters": [
        {
          "name": "name",
          "in": "query",
          "description": "Title of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "event_type",
          "in": "query",
          "description": "Array of multiple event types",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi"
        },
        {
          "name": "target_group",
          "in": "query",
          "description": "Array of multiple target groups",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi"
        },
        {
          "name": "min_age",
          "in": "query",
          "description": "Minimum required age for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "max_age",
          "in": "query",
          "description": "Maximum required age for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "open_registration",
          "in": "query",
          "description": "Whether the event is open for registration of non-patrons",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "fee",
          "in": "query",
          "description": "Fee for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "location",
          "in": "query",
          "description": "Array of multiple locations",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi"
        },
        {
          "name": "description",
          "in": "query",
          "description": "Description of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "start_time",
          "in": "query",
          "description": "Starting time of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "end_time",
          "in": "query",
          "description": "Ending time of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "_match",
          "description": "Matching criteria",
          "enum": [
            "contains",
            "exact",
            "starts_with",
            "ends_with"
          ],
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_order_by",
          "collectionFormat": "csv",
          "description": "Sorting criteria",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_page",
          "description": "Page number, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "_per_page",
          "description": "Page size, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "q",
          "description": "Query filter sent as a request parameter",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Array of events",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "event_type": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "target_group": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "max_age": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "min_age": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "open_registration": {
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "max_participants": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "fee": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "location": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "image": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "start_time": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "end_time": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "link_to_registration": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/public/events_count": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::EventsCount#get",
      "operationId": "getEventsCountPublic",
      "tags": [
        "events"
      ],
      "description": "Get the total number of events",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Total number of events",
          "schema": {
            "type": "integer"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/public/event_types": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::EventTypes#list",
      "operationId": "listEventTypesPublic",
      "tags": [
        "event_types"
      ],
      "description": "List all event types",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event types",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "target_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "selected": {
                        "type": "boolean"
                      },
                      "fee": {
                        "type": "number"
                      }
                    }
                  }
                },
                "max_age": {
                  "type": "integer"
                },
                "min_age": {
                  "type": "integer"
                },
                "open_registration": {
                  "type": "boolean"
                },
                "max_participants": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "image": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "location": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/public/locations": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::Locations#list",
      "operationId": "listLocationsPublic",
      "tags": [
        "locations"
      ],
      "description": "List all locations",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Locations",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "street": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/public/target_groups": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::TargetGroups#list",
      "operationId": "listTargetGroupsPublic",
      "tags": [
        "target_groups"
      ],
      "description": "List target groups",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "List of target groups",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "min_age": {
                  "type": "integer"
                },
                "max_age": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/public/settings": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::Settings#list",
      "operationId": "listEventManagementSettingsPublic",
      "tags": [
        "settings"
      ],
      "description": "List public settings",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "List of public settings",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": [
                    "string",
                    "number",
                    "boolean",
                    "array",
                    "object"
                  ]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/public/image/{hashvalue}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::Image#get",
      "operationId": "getImage",
      "tags": [
        "images"
      ],
      "description": "Retrieve a file as an octet-stream",
      "parameters": [
        {
          "name": "hashvalue",
          "in": "path",
          "description": "Hashvalue of the file",
          "required": true,
          "type": "string"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "image/jpg",
        "image/jpeg",
        "image/png",
        "image/gif",
        "image/avif",
        "image/webp"
      ],
      "responses": {
        "200": {
          "description": "File octet-stream",
          "schema": {
            "type": "string",
            "format": "binary"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/settings": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Settings#list",
      "operationId": "listEventManagementSettings",
      "tags": [
        "settings"
      ],
      "description": "List settings",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "List of settings",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": [
                    "string",
                    "number",
                    "boolean",
                    "array",
                    "object"
                  ]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Settings#add",
      "operationId": "addEventManagementSettings",
      "tags": [
        "settings"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Settings to add",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": [
                    "string",
                    "number",
                    "boolean",
                    "array",
                    "object"
                  ]
                }
              }
            }
          }
        }
      ],
      "description": "Add settings",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "List of settings",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": [
                    "string",
                    "number",
                    "boolean",
                    "array",
                    "object"
                  ]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/settings/{key}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Setting#get",
      "operationId": "getEventManagementSetting",
      "tags": [
        "settings"
      ],
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "description": "Setting key",
          "required": true,
          "type": "string"
        }
      ],
      "description": "Get setting by key",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "A setting",
          "schema": {
            "type": [
              "string",
              "number",
              "boolean",
              "array",
              "object"
            ]
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Setting#update",
      "operationId": "updateEventManagementSetting",
      "tags": [
        "settings"
      ],
      "parameters": [
        {
          "name": "key",
          "in": "path",
          "description": "Setting key",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Setting object",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "value": {
                "type": [
                  "string",
                  "number",
                  "boolean",
                  "array",
                  "object"
                ]
              }
            }
          }
        }
      ],
      "description": "Update setting by key",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "A setting's value",
          "schema": {
            "type": [
              "string",
              "number",
              "boolean",
              "array",
              "object"
            ]
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/events": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Events#list",
      "operationId": "getEvents",
      "tags": [
        "events"
      ],
      "parameters": [
        {
          "name": "name",
          "in": "query",
          "description": "Title of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "event_type",
          "in": "query",
          "description": "Array of multiple event types",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi"
        },
        {
          "name": "target_group",
          "in": "query",
          "description": "Array of multiple target groups",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi"
        },
        {
          "name": "min_age",
          "in": "query",
          "description": "Minimum required age for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "max_age",
          "in": "query",
          "description": "Maximum required age for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "open_registration",
          "in": "query",
          "description": "Whether the event is open for registration of non-patrons",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "fee",
          "in": "query",
          "description": "Fee for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "location",
          "in": "query",
          "description": "Array of multiple locations",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi"
        },
        {
          "name": "description",
          "in": "query",
          "description": "Description of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "start_time",
          "in": "query",
          "description": "Starting time of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "end_time",
          "in": "query",
          "description": "Ending time of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "_match",
          "description": "Matching criteria",
          "enum": [
            "contains",
            "exact",
            "starts_with",
            "ends_with"
          ],
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_order_by",
          "collectionFormat": "csv",
          "description": "Sorting criteria",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_page",
          "description": "Page number, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "_per_page",
          "description": "Page size, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "q",
          "description": "Query filter sent as a request parameter",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "description": "Get all events",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Array of events",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "event_type": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "target_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "selected": {
                        "type": "boolean"
                      },
                      "fee": {
                        "type": "number"
                      }
                    }
                  }
                },
                "min_age": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "max_age": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "max_participants": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "start_time": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "end_time": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "registration_start": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "registration_end": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "location": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "image": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "registration_link": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "open_registration": {
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Events#add",
      "operationId": "addEvent",
      "tags": [
        "events"
      ],
      "description": "Add an event",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Event object that needs to be added",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "event_type": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "min_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_participants": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "start_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "end_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_start": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_end": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "location": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "registration_link": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "open_registration": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "event_type": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "branch": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "target_group": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "max_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "min_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "open_registration": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "max_participants": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "fee": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "location": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "start_time": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "end_time": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "link_to_registration": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "tool"
        }
      }
    }
  },
  "/events/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Event#get",
      "operationId": "getEvent",
      "tags": [
        "events"
      ],
      "description": "Get a single event",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of event to fetch",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "event_type": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "min_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_participants": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "start_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "end_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_start": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_end": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "location": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "registration_link": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "open_registration": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Event#update",
      "operationId": "updateEvent",
      "tags": [
        "events"
      ],
      "description": "Update an event",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of event to update",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Event object that needs to be added",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "event_type": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "min_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_participants": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "start_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "end_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_start": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_end": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "location": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "registration_link": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "open_registration": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "event_type": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "target_group": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "min_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_age": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "max_participants": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "start_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "end_time": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_start": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "registration_end": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "fee": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "location": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "registration_link": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "open_registration": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "tool"
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Event#delete",
      "operationId": "deleteEvent",
      "tags": [
        "events"
      ],
      "description": "Delete an event",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of event to delete",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "204": {
          "description": "Event",
          "schema": {
            "type": "string"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "tool"
        }
      }
    }
  },
  "/event_types": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventTypes#list",
      "operationId": "listEventTypes",
      "tags": [
        "event_types"
      ],
      "description": "List all event types",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "_match",
          "description": "Matching criteria",
          "enum": [
            "contains",
            "exact",
            "starts_with",
            "ends_with"
          ],
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_order_by",
          "collectionFormat": "csv",
          "description": "Sorting criteria",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_page",
          "description": "Page number, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "_per_page",
          "description": "Page size, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "q",
          "description": "Query filter sent as a request parameter",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Event types",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "target_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "selected": {
                        "type": "boolean"
                      },
                      "fee": {
                        "type": "number"
                      }
                    }
                  }
                },
                "max_age": {
                  "type": "integer"
                },
                "min_age": {
                  "type": "integer"
                },
                "open_registration": {
                  "type": "boolean"
                },
                "max_participants": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "image": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "location": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventTypes#add",
      "operationId": "addEventType",
      "tags": [
        "event_types"
      ],
      "description": "Add an event type",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Event type data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/event_types/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventType#get",
      "operationId": "getEventType",
      "tags": [
        "event_types"
      ],
      "description": "Get an event type",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Event type id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventType#update",
      "operationId": "updateEventType",
      "tags": [
        "event_types"
      ],
      "description": "Update an event type",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Event type id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Event type data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Event type",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "target_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "selected": {
                      "type": "boolean"
                    },
                    "fee": {
                      "type": "number"
                    }
                  }
                }
              },
              "max_age": {
                "type": "integer"
              },
              "min_age": {
                "type": "integer"
              },
              "open_registration": {
                "type": "boolean"
              },
              "max_participants": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::EventType#delete",
      "operationId": "deleteEventType",
      "tags": [
        "event_types"
      ],
      "description": "Delete an event type",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Event type id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "204": {
          "description": "Event Type",
          "schema": {
            "type": "string"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/images": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Images#list",
      "operationId": "listImages",
      "tags": [
        "images"
      ],
      "description": "List all uploaded files in formats: jpeg, jpg, png, webp, avif, gif. These are returned as base64 encoded strings.",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Images",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "dtcreated": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "permanent": {
                      "type": "integer"
                    },
                    "dir": {
                      "type": "string"
                    },
                    "public": {
                      "type": "integer"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "uploadcategorycode": {
                      "type": "string"
                    },
                    "owner": {
                      "type": "integer"
                    },
                    "hashvalue": {
                      "type": "string"
                    },
                    "filesize": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "tool"
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Images#add",
      "operationId": "addImage",
      "tags": [
        "images"
      ],
      "description": "Upload file in formats: jpeg, jpg, png, webp, avif, gif.",
      "consumes": [
        "multipart/form-data"
      ],
      "parameters": [
        {
          "name": "file",
          "in": "formData",
          "description": "File to upload",
          "required": true,
          "type": "string",
          "format": "binary"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "201": {
          "description": "Image upload successful",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "tool"
        }
      }
    }
  },
  "/image/{hashvalue}": {
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Image#delete",
      "operationId": "deleteImage",
      "tags": [
        "images"
      ],
      "description": "Delete an image by its hashvalue",
      "parameters": [
        {
          "name": "hashvalue",
          "in": "path",
          "description": "Image hashvalue",
          "required": true,
          "type": "string"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "204": {
          "description": "Image deleted",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "/locations": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Locations#list",
      "operationId": "listLocations",
      "tags": [
        "locations"
      ],
      "description": "List all locations",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "_match",
          "description": "Matching criteria",
          "enum": [
            "contains",
            "exact",
            "starts_with",
            "ends_with"
          ],
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_order_by",
          "collectionFormat": "csv",
          "description": "Sorting criteria",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_page",
          "description": "Page number, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "_per_page",
          "description": "Page size, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "q",
          "description": "Query filter sent as a request parameter",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Locations",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "street": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Locations#add",
      "operationId": "addLocation",
      "tags": [
        "locations"
      ],
      "description": "Add a location",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Location data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/locations/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Location#get",
      "operationId": "getLocation",
      "tags": [
        "locations"
      ],
      "description": "Get a location",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Location id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Location#update",
      "operationId": "updateLocation",
      "tags": [
        "locations"
      ],
      "description": "Update a location",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Location id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Location data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Location",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Location#delete",
      "operationId": "deleteLocation",
      "tags": [
        "locations"
      ],
      "description": "Delete a location",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Location id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "204": {
          "description": "Location",
          "schema": {
            "type": "string"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/target_groups": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroups#list",
      "operationId": "listTargetGroups",
      "tags": [
        "target_groups"
      ],
      "description": "List target groups",
      "parameters": [
        {
          "name": "_match",
          "description": "Matching criteria",
          "enum": [
            "contains",
            "exact",
            "starts_with",
            "ends_with"
          ],
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_order_by",
          "collectionFormat": "csv",
          "description": "Sorting criteria",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "_page",
          "description": "Page number, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "_per_page",
          "description": "Page size, for paginated object listing",
          "in": "query",
          "required": false,
          "type": "integer"
        },
        {
          "name": "q",
          "description": "Query filter sent as a request parameter",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "List of target groups",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "min_age": {
                  "type": "integer"
                },
                "max_age": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "post": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroups#add",
      "operationId": "addTargetGroup",
      "tags": [
        "target_groups"
      ],
      "description": "Add a target group",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Target group data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  },
  "/target_groups/{id}": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroup#get",
      "operationId": "getTargetGroup",
      "tags": [
        "target_groups"
      ],
      "description": "Get a target group",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Target group id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": [
            "configure",
            "tool"
          ]
        }
      }
    },
    "put": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroup#update",
      "operationId": "updateTargetGroup",
      "tags": [
        "target_groups"
      ],
      "description": "Update a target group",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Target group id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "body",
          "in": "body",
          "description": "Target group data",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Target group",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "min_age": {
                "type": "integer"
              },
              "max_age": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    },
    "delete": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::TargetGroup#delete",
      "operationId": "deleteTargetGroup",
      "tags": [
        "target_groups"
      ],
      "description": "Delete a target group",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Target group id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "lang",
          "in": "query",
          "description": "Language code of the navigator",
          "required": false,
          "type": "string"
        }
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "204": {
          "description": "Target group",
          "schema": {
            "type": "string"
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": [
                  "string",
                  "array"
                ]
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "plugins": "configure"
        }
      }
    }
  }
}
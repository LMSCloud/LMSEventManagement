{
  "/events": {
    "get": {
      "x-mojo-to": "Com::LMSCloud::EventManagement::Controllers::Public::Events#get",
      "operationId": "getEvents",
      "tags": ["events"],
      "parameters": [
        {
          "name": "name",
          "in": "query",
          "description": "Title of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "event_type",
          "in": "query",
          "description": "Type of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "event_types",
          "in": "query",
          "description": "Array of multiple event types",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "branch",
          "in": "query",
          "description": "Branch responsible for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "branches",
          "in": "query",
          "description": "Array of multiple branches",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "target_group",
          "in": "query",
          "description": "Adressed target group of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "target_groups",
          "in": "query",
          "description": "Array of multiple target groups",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "max_age",
          "in": "query",
          "description": "Maximum required age for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "open_registration",
          "in": "query",
          "description": "Whether the event is open for registration of non-patrons",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "fee",
          "in": "query",
          "description": "Fee for the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "location",
          "in": "query",
          "description": "Location of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "locations",
          "in": "query",
          "description": "Array of multiple locations",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "name": "start_time",
          "in": "query",
          "description": "Starting time of the event",
          "required": false,
          "type": "string"
        },
        {
          "name": "end_time",
          "in": "query",
          "description": "Ending time of the event",
          "required": false,
          "type": "string"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Array of events",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": ["string", "null"]
                },
                "event_type": {
                  "type": ["string", "null"]
                },
                "branch": {
                  "type": ["string", "null"]
                },
                "target_group": {
                  "type": ["string", "null"]
                },
                "max_age": {
                  "type": ["integer", "null"]
                },
                "min_age": {
                  "type": ["integer", "null"]
                },
                "open_registration": {
                  "type": ["boolean", "null"]
                },
                "max_participants": {
                  "type": ["integer", "null"]
                },
                "fee": {
                  "type": ["integer", "null"]
                },
                "location": {
                  "type": ["string", "null"]
                },
                "description": {
                  "type": ["string", "null"]
                },
                "image": {
                  "type": ["string", "null"]
                },
                "start_time": {
                  "type": ["string", "null"]
                },
                "end_time": {
                  "type": ["string", "null"]
                },
                "link_to_registration": {
                  "type": ["string", "null"]
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "404": {
          "description": "The object was not found",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "description": "An explanation for the error",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}

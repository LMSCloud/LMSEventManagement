[% USE gtx = Gettext('com.marywooduniversity.roomreservations', language, 'utf-8', mbf_path) %]

[% USE Koha %]
[% USE Branches %]
[% INCLUDE 'doc-head-open.inc' %]
    <title>[% IF ( LibraryNameTitle ) %][% LibraryNameTitle %][% ELSE %][% 'Koha online' | gettext %][% END %] [% 'catalog' | gettext %] &rsaquo; [% 'Booking' | gettext %]</title>

[% INCLUDE 'doc-head-close.inc' %]
    <link rel="stylesheet" type="text/css" href="/webcustom/css/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <style>
		.event-detail-col{
			border-left: thin solid #ddd;
		}
		@media screen and (max-width: 991px) {
			.event-detail-col{
				border-left: none;
			}
		}
		
		.eventfacets{
			font-size: 95%;
			font-weight: 400;
			line-height: 125%;
			color: #0074ad;
		}
		
		h3 {
			margin-top: 10px;
			font-size: 115% !important; 
			margin-bottom: .5rem;
			font-weight: 600;
			line-height: 1.2;
		}
		
		.resetbutton {
		  border: 1px solid #0066cc;
		  background-color: #0074ad;
		  color: #ffffff;
		  padding: 5px 10px;
		  margin-top: 15px;
		  margin-bottom: 5px;
		  border-radius: calc(.25rem - 1px);
		}

		.resetbutton:hover {
		  border: 1px solid #0099cc;
		  background-color: #3985aa;
		  color: #ffffff;
		  padding: 5px 10px;
		}

		.resetbutton:disabled,
		.resetbutton[disabled]{
		  border: 1px solid #999999;
		  background-color: #efefef;
		  color: #666666;
		}
    </style>
</head>
[% BLOCK cssinclude %][% END %]

[% INCLUDE 'bodytag.inc' bodyid='opac-main' %]
[% INCLUDE 'masthead.inc' %]
<div class="main">
    <!-- op defaults to 'undef' if template param is undef (meaning show calendar) -->
    [% DEFAULT op = 'undef' %]
    [% IF op == 'undef' %]
    [% DEFAULT selected_mon_cnt = 0 %]
    <ul class="breadcrumb">
        <li><a href="/cgi-bin/koha/opac-main.pl">[% 'Home' | gettext %]</a> <span class="divider">&rsaquo;</span></li>
        <li><a href="#">[% "Upcoming Events" | gettext %]</a></li>
    </ul>
        <div class="container-fluid">
            <div class="row-fluid">
				<div class="span3">
										
					<div class="container-fluid">
					<div class="row">
					<div class="col-lg-2">
					<div id="facetcontainer">
					<div id="search-facets">
						<h2><a href="#" class="menu-collapse-toggle">Veranstaltungen filtern</a></h2>
						<ul>
							
							[% IF used_target_groups.size > 1 %]
							<li><h3>Zielgruppe</h5>
							[% FOREACH target_group IN used_target_groups %]
								<div>
									<input onclick='handleClick(this);' type="checkbox" id="[% target_group.targetgroupcode %]" name="targetgroup" value="[% target_group.targetgroupcode %]" autocomplete="off">
									<label class="eventfacets" for="[% target_group.targetgroupcode %]">[% target_group.targetgroup %] </label> 
								</div>
							[% END %] <!-- FOREACH -->
							</li>
							[% END %] <!-- IF -->

							[% IF used_event_types.size > 1 %]
							<li><h3>Veranstaltungsart</h3>
							[% FOREACH eventtype IN used_event_types %]
								<div>
									<input onclick='handleClick(this);' type="checkbox" id="[% eventtype.eventtypecode %]" name="eventtype" value="[% eventtype.eventtypecode %]" autocomplete="off">
									<label class="eventfacets" for="[% eventtype.eventtypecode %]">[% eventtype.eventtype %] </label> 
								</div>
							[% END %] <!-- FOREACH -->
							</li>
							[% END %] <!-- IF -->
							
							[% IF used_branches.size > 1 %]
							<li><h3>Zweigstelle</h3>
							[% FOREACH branch IN used_branches %]
								<div>
									<input onclick='handleClick(this);' type="checkbox" id="[% branch.branchcode %]" name="branch" value="[% branch.branchcode %]" autocomplete="off">
									<label class="eventfacets" for="[% branch.branchcode %]">[% branch.branchname %] </label> 
								</div>
							[% END %] <!-- FOREACH -->
							</li>
							[% END %] <!-- IF -->
							
							<li><h3>Zeitraum</h3>
								<div>
									<label class="eventfacets-date" for="starttime" style="width:15%">[% 'From' | gettext %]</label>
									<input oninput='handleDate(this);' autocomplete="off" type="date" name="starttime" value="">
								</div>
								<div>
									<label class="eventfacets-date" for="endtime" style="width:15%">[% 'To' | gettext %]</label>								
									<input oninput='handleDate(this);' id="endtime" autocomplete="off" type="date" name="endtime" value="">
								</div>
							</li>
							
							<li><h3>Alter</h3>
								<div>
									<input oninput='handleAge(this);' autocomplete="off" type="range" name="max_age" min="0" max="99" value="99" step="1">
									<output>99</output>
								</div>
							</li>
							
							<li><h3>Anmeldung</h3>
								<div>
									<input onclick='handlePubReg(this);' type="checkbox" id="public_reg" name="public_reg" value="1">
									<label class="eventfacets" for="public_reg">[% 'Registration without library card' | gettext %]</label> 
								</div>
							</li>
							<div style="text-align:center;">
							<button class="resetbutton" onclick='handleResetButton();' id="resetFilter" name="resetFilter" disabled autocomplete="off">[% 'Filter zurücksetzen' | gettext %]</button>
							</div>
						</ul>
					</div> <!-- search-facets -->
					</div> <!-- facetcontainer -->
					</div> <!-- col-lg-3 -->
					<div class="col-lg-10 order-first order-md-first order-lg-2 maincontent">
						<h1>[% 'Upcoming Events' | gettext %]</h1>	
						<div id="lmscoverflow">	</div>						

						<h1 style="margin-top:25px">[% 'Regelmäßige Veranstaltungen' | gettext %]</h1>
						<div id="lmscoverflow2">	</div>
					</div> <!-- col-lg-10 -->
					
					</div> <!-- row -->
					</div> <!-- container-fluid -->					
				</div>
                <div class="span9">
                    
                </div> <!-- / .span12 -->
            </div> <!-- / .row-fluid -->
        </div> <!-- / .container-fluid -->
    [% ELSIF op == 'detail' %]
    <div class="main">
		<ul class="breadcrumb">
			<li><a href="/cgi-bin/koha/opac-main.pl">[% 'Home' | gettext %] </a> <span class="divider">&rsaquo;</span> </li>
			<li><a href="/opac_events"> [% "Upcoming Events" | gettext %] </a><span class="divider">&rsaquo;</span></li>
			<li><a href="/opac_events"> [% "Details for" | gettext %]: [% event.title %] </a></li>
		</ul>
		

		<div class="container-fluid">
		<div class="row">
		
		<div class="col-lg-3"> 
			<img src="/events/[% event.imagefile %]" style="max-width:100%"></img>
		</div> <!-- col-lg-3 -->
		
		<div class="col-lg-3 event-detail-col">

			<h1 class="title" property="name">[% event.title %]</h1>
			
			<h5 class="author"><a href="#">[% event.eventtype %]</a></h5>
<!--
			<span class="results_summary type"> [% event.eventtype %] </span>
-->
			<span class="results_summary type"> [% event.starttime %] - [% event.endtime %]</span>
			<span class="results_summary type"> [% event.branchname %] </span>
			<span class="results_summary type"> [% event.targetgroup %] </span>
			<span class="results_summary type"> [% event.max_age %] </span>
			<span class="results_summary type"> [% event.max_participants %] </span>
			<span class="results_summary type"> [% event.public_reg %] </span>
			<span class="results_summary summary">[% event.description %]</span>
<!--
			<span class="results_summary type"><span class="label">Materialtyp: </span><img src="/opac-tmpl/lib/famfamfam/BK.png" alt="materialTypeLabel" class="materialtype">
			Buch, <span property="description">20 Seiten 33 cm</span>.</span><span class="results_summary"><span class="label"> Verlag: </span>Düsseldorf Rauch Verlag [2020]<span id="content_type">, <span class="label">Inhaltstyp: </span>Text<span class="separator"> | </span>unbewegtes Bild , <span class="label">Medientyp: </span>ohne Hilfsmittel zu benutzen , <span class="label">Datenträgertyp: </span>Band</span>, <span class="isbn"><span class="label">EAN: </span><span property="ean">9783792003732</span></span>, <span class="isbn"><span class="label">ISBN: </span><span property="isbn">9783792003732.</span></span></span><span class="results_summary uniform_titles"><span class="label">Originaltitel: </span><span property="alternateName">Der kleine Berg </span></span><span class="results_summary classification"><span class="label">Themenkreis: </span><a href="/cgi-bin/koha/opac-search.pl?q=sbg:%22Natur%22">Natur</a></span><span class="results_summary genre"><span class="label">Genre/Form: </span><a href="/cgi-bin/koha/opac-search.pl?q=su:%22Bilderbuch%22">Bilderbuch</a></span><span class="results_summary summary truncable-txt"><span class="label">Zusammenfassung: </span>Die Geschichte des kleinen Berges beginnt vor sehr langer Zeit. Damals war die Erde noch absolut flach, es gab keine Tiere, sondern nur viele, fremdartige Pflanzen. Doch dann bewegte sich der Erdboden und eine kleine Beule wuchs aus der Erde. Allerdings blieb es nicht dabei ... Ab 3.<a href="javascript:void(0)" class="truncable-txt-readmore">Mehr lesen »</a></span><span class="results_summary summary truncable-txt"><span class="label">Rezension: </span>Die Geschichte des kleinen Berges beginnt vor langer Zeit. Damals war die Erde flach, es gab keine Tiere, sondern nur fremdartige Pflanzen. Doch dann bewegte sich der Erdboden und eine kleine Beule wuchs aus der Erde. Zur selben Zeit krochen die ersten Tiere aus dem Wasser. Allerdings blieb es nicht dabei: Riesige Dinosaurier eroberten die Gegend und aus der Beule wurde ein stattlicher Hügel. Als die ersten Menschen anfingen das Land zu bevölkern, wuchs auch der Hügel immer mehr in die Höhe. Bis dieser sich im Mittelalter zu einem kleinen Berg emporhob. Bis er schließlich in den nächsten hunderten von Jahren so groß wurde, dass er von den Menschen sogar "Himmelskopf" genannt wurde! - Ein ruhiges und liebevolles Pop-up-Bilderbuch, das mit ganz wenig Text auskommt, jedoch gerade deshalb sehr ausdrucksstark ist. Die Geschichte ist simpel und philosophisch zugleich. Denn oft braucht es seine Zeit, bis etwas groß, stark und schön ist. Der Pop-up-Berg "wächst" von Doppelseite zu Doppelseite wunderbar anschaulich, aber auch die farbenfrohen Grafiken runden das Gelesene atmosphärisch gut ab.<a href="javascript:void(0)" class="truncable-txt-readmore">Mehr lesen »</a></span>
			</div>
-->		
		</div> <!-- /.col-lg-6 -->
		
		<div class="col-lg-3"></div>
		</div> <!-- row -->
		</div> <!-- container-fluid -->
		</div>	
 
    [% END %]
</div> <!-- / .main -->
[% INCLUDE 'opac-bottom.inc' %]
[% BLOCK jsinclude %]

<script>


//~ function handleClick(cb) {
  //~ /*display("Clicked, new value = " + cb.checked);*/
  //~ //alert('Hallo Welt!' + cb.checked + cb.value);
  
  //~ var url = window.location.href;
  
  //~ if (cb.checked) { // checkbox checked
	//~ var regex = new RegExp( cb.name + '=', 'i' );
	//~ if (url.match(regex)) { // url contains filter group
		//~ url = url.replace(cb.name + '=', cb.name + '=' + cb.value + '|');
	//~ } else { // first filter in group
		//~ if (url.match(/opac_events\?/i)) {
			//~ url = url.replace(/opac_events\?/i, 'opac_events?' + cb.name + '=' + cb.value + '&');
		//~ } else { // first filter at all
			//~ url = url.replace(/opac_events/i, 'opac_events?' + cb.name + '=' + cb.value);
		//~ }
	//~ }
  //~ } else { // checkbox unchecked
	//~ alert("unchecked something");
	//~ var regex = new RegExp( cb.value + "\\|", 'i' );
	//~ if (url.match(regex)) {
		//~ alert("match!" + regex);
		//~ url = url.replace(cb.value + '|', '');
	//~ } else {
		//~ regex = new RegExp( "\\|" + cb.value, 'i' );
		//~ if (url.match(regex)) {
			//~ alert("match!" + regex);
			//~ url = url.replace('|' + cb.value, '');
		//~ } else {
			//~ url = url.replace("targetgroup="+cb.value, '');
		//~ }
	//~ }
	//~ url = url.replace(cb.value + '|', '');
	//~ url = url.replace('|' + cb.value, '');
	//~ url = url.replace(cb.name + '=' + cb.value, '');
	
  //~ }
  
  //~ if (url.slice(-1) == '?') { // remove last '?' from url
	  //~ url = url.substring(0, url.length - 1);
  //~ }
  
  //~ window.open(url,"_self")
//~ }

function handleResetButton() {
	
	let allEvents = document.getElementsByClassName("lcfItemContainer");
	for (let event of allEvents) {
		event.setAttribute("data-filterdBy", '');
	}
	
	var container = document.getElementById("search-facets");
	let checkboxes = container.querySelectorAll("input[type=checkbox]");
	for (let cb of checkboxes) {
		cb.checked = false;
	}
	
	let dates = container.querySelectorAll("input[type=date]");
	for (let date of dates) {
		date.value = null;
	}
	
	let sliders = container.querySelectorAll("input[type=range]");
	for (let slider of sliders) {
		slider.value = 99;
		slider.nextElementSibling.value = slider.value
	}
	
	filterEvents();
	filterFacets();
}

function handleClick(cb) {
	
	//~ var lmscoverflow = document.getElementById("lmscoverflow");
	//~ let uppcommingEvents = lmscoverflow.getElementsByClassName("lcfItemContainer");
	
	//~ var facetes = document.getElementById("facetes");
	//~ let filters = facetes.querySelectorAll("input");
	
	// checked Targedgroupes
	// checked eventTypes 
	// ...
	// selectedAge 
	// selected dates
	
	//~ var checkedTargedGroups = [];
	//~ var numTargedGroups = 0;
	
	//~ for (let filter of filters) {
		//~ if (filter.name == 'targetgroup' && filter.checked) {
			//~ checkedTargedGroups.push(filter.value);
			//~ numTargedGroups++;
		//~ }
	//~ }
	
	//~ console.log(checkedTargedGroups);
	
	//~ for (let event of uppcommingEvents) {
		//~ console.log(event);
		
		//~ for (let filter of filters) {
			//~ console.log(filter.name);
			//~ if (filter.name == 'targetgroup') {
				//~ console.log(filter.value);
			//~ }
		//~ }
	//~ }
	
	//~ var nothingIsChecked = true;
	
	//~ for (let checkbox of document.querySelectorAll("input[name=" + CSS.escape(cb.name) + "]")) {
		//~ if (checkbox.checked) {
			//~ for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "=" + CSS.escape(checkbox.value) + "]")) el.style.display = 'block';
			//~ nothingIsChecked = false;
		//~ } else {
			//~ for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "=" + CSS.escape(checkbox.value) + "]")) el.style.display = 'none';
		//~ }
	//~ }
	
	//~ if (nothingIsChecked)
		//~ for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "]")) el.style.display = 'block';
		
	var numChecked = 0;
	let allCheckboxes = document.querySelectorAll("input[name=" + CSS.escape(cb.name) + "]");
	for (let checkbox of allCheckboxes) {
		
		if (checkbox.checked) {
			
			numChecked++;
			// remove checkbox.name from filterBy of all events where attr.value == checkbox.value --> event visible 
			for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "=" + CSS.escape(checkbox.value) + "]")) {
				showEvent(el,cb.name);
			}
			
		} else {
			// add checkbox.name from filterBy of all events where attr.value == checkbox.value --> hide event
			for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "=" + CSS.escape(checkbox.value) + "]")) {
				hideEvent(el,cb.name);
			}
			
		}
	}
	
	// show all events if all or no checkboxes of a group are checked
	if (numChecked == 0 || numChecked == allCheckboxes.length) { 
		for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "]")) {
			showEvent(el,cb.name);
		}
	}
		
	filterEvents();
	filterFacets();
}

function showEvent(event,name) {
	var filterdBy = event.getAttribute("data-filterdBy");
	filterdBy = filterdBy.replace(name,'');
	event.setAttribute("data-filterdBy", filterdBy);
}

function hideEvent(event,name) {
	var filterdBy = event.getAttribute("data-filterdBy");
	const regex = new RegExp(name);
	if (!regex.test(filterdBy)) {
		event.setAttribute("data-filterdBy", filterdBy + name);
	}
}

function filterFacets() {

	var container = document.getElementById("search-facets");
	let eventfacets = document.getElementsByClassName("eventfacets");
	
	var lmscoverflow = document.getElementById("lmscoverflow");
	let uppcommingEvents = lmscoverflow.getElementsByClassName("lcfItemContainer");
	
	// Check all facets, if there are visible events or not
	for (let facet of eventfacets) {
		var inputElement = document.getElementById(facet.htmlFor);
		if (inputElement == null) {
			continue;
		}
		var showFacet = false;
		for (let event of uppcommingEvents) {
			
			var filterdBy = event.getAttribute("data-filterdBy");
			var eventValue = event.getAttribute("data-" + inputElement.name);
			if (filterdBy == '' && eventValue == inputElement.value) {
				showFacet = true;
				//break;
			}
		}
		
		if (!showFacet)
			facet.style.opacity = '0.3';
		else 
			facet.style.opacity = '1.0';
	}
	
	// If nothing is checked ---> disable reset button
	var container = document.getElementById("search-facets");
	let checkboxes = container.querySelectorAll("input[type=checkbox]");
	for (let cb of checkboxes) {
		if (cb.checked) {
			document.getElementById("resetFilter").disabled = false;
			return;
		}
	}
	
	let dates = container.querySelectorAll("input[type=date]");
	for (let date of dates) {
		if (isNaN(date.value)) {
			document.getElementById("resetFilter").disabled = false;
			return;
		}
	}
	
	let sliders = container.querySelectorAll("input[type=range]");
	for (let slider of sliders) {
		if (slider.value != 99){
			document.getElementById("resetFilter").disabled = false;
			return;
		}
	}
	
	document.getElementById("resetFilter").disabled = true;
}

function filterEvents() {

	let uppcommingEvents = document.getElementsByClassName("lcfItemContainer");
	
	for (let event of uppcommingEvents) {
		var filterdBy = event.getAttribute("data-filterdBy");
		if (filterdBy != '') {
			event.style.opacity = '0.3';
		} else { 
			event.style.opacity = '1.0';
		}
	}
}

function handlePubReg(cb) {
	
	
	if (cb.checked) {
		for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "]")) hideEvent(el,cb.name);
		for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "=" + CSS.escape(cb.value) + "]")) showEvent(el,cb.name);
	} else {
		for (let el of document.querySelectorAll("div[data-" + CSS.escape(cb.name) + "]")) showEvent(el,cb.name);
	}
	
	filterEvents();
	filterFacets();
}

function handleAge(slider) {
	
	for (let el of document.querySelectorAll("div[data-" + CSS.escape(slider.name) + "]")) {
		
		var age = el.getAttribute("data-" + CSS.escape(slider.name) + "");
		
		if (0 <= parseInt(slider.value) && parseInt(slider.value) < parseInt(age)) {
			// event not visible
			hideEvent(el,slider.name);
		} else {
			// event visible
			showEvent(el,slider.name);
		}
	}
	
	filterEvents();
	filterFacets();
	
	slider.nextElementSibling.value = slider.value
}

function handleDate(date) {
	
	var datevalueFrom = null;
	var datevalueTo = null;
	
	if (date.name == 'starttime') {
		datevalueFrom = new Date(date.value);
		datevalueTo = new Date(document.querySelectorAll("input[name=endtime]").value);
	} else {
		datevalueFrom = new Date(document.querySelectorAll("input[name=starttime]").value);
		datevalueTo = new Date(date.value);
	}
	
	for (let el of document.querySelectorAll("div[data-" + CSS.escape(date.name) + "]")) {
		
		var datestring = el.getAttribute("data-" + CSS.escape	(date.name) + "");
		datestring = datestring.replace(/\s*[0-9]+:[0-9]+:[0-9]+/g,"");
		
		var starttime = new Date(datestring);
		
		if (date.name == 'starttime') {
				
			if (isNaN(datevalueTo)) {
					
				if (starttime.getTime() < datevalueFrom.getTime()) 
					hideEvent(el,date.name);
				else
					showEvent(el,date.name);
					
			} else {	// datevalueTo is valid
				
				if (starttime.getTime() < datevalueFrom.getTime() || starttime.getTime() >= datevalueTo.getTime()) 
					hideEvent(el,date.name);
				else
					showEvent(el,date.name);
			}
				
		} else {    // date.name == endtime
			
			if (isNaN(datevalueFrom)) {
				
				if (starttime.getTime() >= datevalueTo.getTime()) 
					hideEvent(el,date.name);
				else
					showEvent(el,date.name);			
				
			} else { 	// datevalueFrom is valid
				
				if (starttime.getTime() >= datevalueTo.getTime() || starttime.getTime() < datevalueFrom.getTime()) 
					hideEvent(el,date.name);
				else
					showEvent(el,date.name);			
			}
				
		}
	}
	
	filterEvents();
	filterFacets();
}

</script>

<script src="/webcustom/js/LMSCoverFlow.js"></script>
<script>

  const lmscoverflow = LMSCoverFlow.LMSCoverFlow(
    'lmscoverflow',
    {
        coverImageFallbackHeight: 210,
        gridCoverFlowBreakpoints: { xl: 5000, l: 1025, m: 769, s: 481, xs: 320 },
        coverFlowContext: 'grid',
    },
    [
		[% FOREACH event IN events %]
		{
			title: '[% event.title %]',
			author: '[% event.starttime %]',
			coverurl: '/events/[% event.imagefile %]',
			referenceToDetailsView: '/opac_events?op=detail&id=[% event.eventid %]',
			additionalProperties: {
				"targetgroup":"[% event.targetgroupcode %]",
				"eventtype":"[% event.eventtypecode %]",
				"branch":"[% event.branchcode %]",
				"max_age":"[% event.max_age %]",
				"public_reg":"[% event.public_reg %]",
				"starttime":"[% event.starttime %]",
				"endtime":"[% event.endtime %]",
				"filterdBy":"",
			},
		},
		[% END %] /* FOREACH */
    ],
  );

  lmscoverflow.render();
  
  const lmscoverflow2 = LMSCoverFlow.LMSCoverFlow(
    'lmscoverflow2',
    {
        coverImageFallbackHeight: 210,
        gridCoverFlowBreakpoints: { xl: 5000, l: 1025, m: 769, s: 481, xs: 320 },
        coverFlowContext: 'grid',
    },
    [
		[% FOREACH event IN events %]
		{
			title: '[% event.starttime %]',
			author: '[% event.title %]',
			coverurl: '/events/[% event.imagefile %]',
			referenceToDetailsView: '/opac_events?op=detail&id=[% event.eventid %]',
			additionalProperties: {
				"targetgroup":"[% event.targetgroupcode %]",
				"eventtype":"[% event.eventtypecode %]",
				"branch":"[% event.branchcode %]",
				"max_age":"[% event.max_age %]",
				"public_reg":"[% event.public_reg %]",
				"starttime":"[% event.starttime %]",
				"endtime":"[% event.endtime %]",
				"filterdBy":"",
			},
		},
		[% END %] /* FOREACH */
    ],
  );

  lmscoverflow2.render();
</script>


[% END %]
